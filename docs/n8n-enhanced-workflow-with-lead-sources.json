{
  "name": "Enhanced Email Lead Processing with Lead Sources",
  "nodes": [
    {
      "parameters": {
        "authentication": "gmailOAuth2",
        "resource": "message",
        "operation": "getAll",
        "returnAll": true,
        "maxResults": 10,
        "simple": false
      },
      "id": "gmail-trigger",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "authentication": "openAiApi",
        "resource": "chat",
        "operation": "message",
        "model": "gpt-4",
        "messages": {
          "message": [
            {
              "role": "system",
              "content": "You are an expert real estate lead detection AI. Analyze emails to identify potential real estate leads and extract structured data. Focus on emails that contain real estate inquiries, property interest, buying/selling intent, or investment opportunities."
            },
            {
              "role": "user",
              "content": "Analyze this real estate email and extract lead information. Return ONLY valid JSON:\n\nFrom: {{ $json.from.text }}\nSubject: {{ $json.subject }}\nBody: {{ $json.text }}\n\n**CRITICAL: You MUST extract ALL fields that are present in the email body.**\n\n**EXTRACTION RULES - Check for BOTH form formats:**\n\n**FORM 1 (Instant Home Updates):**\n1. Look for \"Name: \" in the text - extract the value after it\n2. Look for \"Best Email: \" in the text - extract the value after it  \n3. Look for \"Area(s) of Interest: \" in the text - extract the value after it\n4. Look for \"How many bedrooms?: \" in the text - extract the value after it\n5. Look for \"How many bathrooms?: \" in the text - extract the value after it\n6. Look for \"How much square feet? : \" in the text - extract the value after it\n7. Look for \"Acreage? : \" in the text - extract the value after it\n8. Look for \"Price?: \" in the text - extract the value after it\n9. Look for \"Any other criteria? : \" in the text - extract the value after it\n10. Look for \"Phone : \" in the text - extract the value after it\n\n**FORM 2 (NWA Starter Pack):**\n1. Look for \"Name: \" in the text - extract the value after it\n2. Look for \"Email: \" in the text - extract the value after it  \n3. Look for \"Address: \" in the text - extract the value after it\n4. Look for \"City: \" in the text - extract the value after it\n5. Look for \"State: \" in the text - extract the value after it\n6. Look for \"Zipcode: \" in the text - extract the value after it\n\n**DO NOT LEAVE FIELDS EMPTY IF THEY EXIST IN THE TEXT.**\n\n**Lead Detection Rules:**\n- Name + Email = Valid Lead (confidence: 0.8-1.0)\n- Both forms are valid leads if they contain name and email\n\nReturn JSON:\n{\n  \"is_lead\": true,\n  \"confidence\": 0.9,\n  \"lead_data\": {\n    \"first_name\": \"extract from Name: field\",\n    \"last_name\": \"extract from Name: field\", \n    \"email\": [\"extract from Email: or Best Email: field\"],\n    \"phone\": [\"extract from Phone: field if present\"],\n    \"property_details\": \"combine bedrooms, bathrooms, sq ft, acreage if present\",\n    \"price_range\": \"extract from Price?: field if present\",\n    \"timeline\": \"\",\n    \"additional_criteria\": \"extract from Any other criteria?: field if present\",\n    \"lead_source\": \"email\",\n    \"urgency\": \"medium\",\n    \"address\": \"extract from Address: field if present\",\n    \"city\": \"extract from City: or Area(s) of Interest: field\", \n    \"state\": \"extract from State: field if present\",\n    \"zip_code\": \"extract from Zipcode: field if present\"\n  },\n  \"analysis\": {\n    \"intent\": \"general_inquiry\",\n    \"property_type\": \"unknown\",\n    \"budget_range\": \"extract from price_range if present\",\n    \"location_preferences\": [\"extract city/state/area of interest\"]\n  }\n}"
            }
          ]
        }
      },
      "id": "openAI-analysis",
      "name": "OpenAI Analysis",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "https://app.stresslesscrm.com/api/n8n/process-lead",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.N8N_WEBHOOK_TOKEN }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "email_id",
              "value": "{{ $json.id }}"
            },
            {
              "name": "from",
              "value": "{{ $json.from }}"
            },
            {
              "name": "subject",
              "value": "{{ $json.subject }}"
            },
            {
              "name": "body",
              "value": "{{ $json.text }}"
            },
            {
              "name": "date",
              "value": "{{ $json.date }}"
            },
            {
              "name": "user_id",
              "value": "system"
            },
            {
              "name": "ai_analysis",
              "value": "{{ $('OpenAI Analysis').json }}"
            }
          ]
        }
      },
      "id": "send-to-crm",
      "name": "Send to CRM",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 300]
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "OpenAI Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Analysis": {
      "main": [
        [
          {
            "node": "Send to CRM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-01-15T10:00:00.000Z",
  "versionId": "1"
} 