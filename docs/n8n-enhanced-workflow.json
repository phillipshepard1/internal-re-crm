{
  "name": "Enhanced Email Lead Processing",
  "nodes": [
    {
      "parameters": {
        "authentication": "gmailOAuth2",
        "resource": "message",
        "operation": "getAll",
        "returnAll": true,
        "maxResults": 10,
        "simple": true
      },
      "id": "gmail-trigger",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "authentication": "openAiApi",
        "resource": "chat",
        "operation": "message",
        "model": "gpt-4",
        "messages": {
          "message": [
            {
              "role": "system",
              "content": "You are an expert real estate lead detection AI. Analyze emails to identify potential real estate leads and extract structured data."
            },
            {
              "role": "user",
              "content": "Analyze this real estate email and extract lead information. Return ONLY valid JSON:\n\nFrom: {{ $json.From }}\nSubject: {{ $json.Subject }}\nBody: {{ $json.snippet }}\n\n{\n  \"is_lead\": true/false,\n  \"confidence\": 0.0-1.0,\n  \"lead_data\": {\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"email\": [\"string\"],\n    \"phone\": [\"string\"],\n    \"property_details\": \"string\",\n    \"price_range\": \"string\",\n    \"timeline\": \"string\",\n    \"message\": \"string\",\n    \"lead_source\": \"email\",\n    \"urgency\": \"high/medium/low\"\n  },\n  \"analysis\": {\n    \"intent\": \"buying/selling/investing/general_inquiry\",\n    \"property_type\": \"residential/commercial/land\",\n    \"budget_range\": \"string\",\n    \"location_preferences\": [\"string\"]\n  }\n}"
            }
          ]
        }
      },
      "id": "openai-analysis",
      "name": "OpenAI Analysis",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Add metadata and validation\nconst emailData = $input.first().json;\nconst aiAnalysis = $('OpenAI Analysis').first().json;\n\n// Parse AI analysis\nlet parsedAnalysis;\ntry {\n  parsedAnalysis = JSON.parse(aiAnalysis.choices[0].message.content);\n} catch (error) {\n  // If parsing fails, create default analysis\n  parsedAnalysis = {\n    is_lead: false,\n    confidence: 0.0,\n    lead_data: {},\n    analysis: {}\n  };\n}\n\n// Add processing metadata\nconst enhancedData = {\n  email_id: emailData.id,\n  from: emailData.From,\n  subject: emailData.Subject,\n  body: emailData.snippet,\n  date: emailData.internalDate,\n  user_id: $env.USER_ID || 'system',\n  processing_timestamp: new Date().toISOString(),\n  ai_analysis: parsedAnalysis,\n  // Add validation flags\n  is_valid_lead: parsedAnalysis.is_lead && parsedAnalysis.confidence >= 0.7,\n  has_contact_info: !!(parsedAnalysis.lead_data?.email?.length > 0 || parsedAnalysis.lead_data?.phone?.length > 0),\n  has_property_info: !!(parsedAnalysis.lead_data?.property_details || parsedAnalysis.lead_data?.price_range)\n};\n\nreturn [{ json: enhancedData }];"
      },
      "id": "enhance-data",
      "name": "Enhance Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "url": "https://app.stresslesscrm.com/api/n8n/process-lead",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.N8N_WEBHOOK_TOKEN }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "email_id",
              "value": "{{ $json.email_id }}"
            },
            {
              "name": "from",
              "value": "{{ $json.from }}"
            },
            {
              "name": "subject",
              "value": "{{ $json.subject }}"
            },
            {
              "name": "body",
              "value": "{{ $json.body }}"
            },
            {
              "name": "date",
              "value": "{{ $json.date }}"
            },
            {
              "name": "user_id",
              "value": "{{ $json.user_id }}"
            },
            {
              "name": "ai_analysis",
              "value": "{{ $json.ai_analysis }}"
            }
          ]
        }
      },
      "id": "send-to-crm",
      "name": "Send to CRM",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "is-valid-lead",
              "leftValue": "={{ $json.is_valid_lead }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "lead-filter",
      "name": "Lead Filter",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [780, 300]
    },
    {
      "parameters": {
        "jsCode": "// Log successful lead processing\nconst data = $input.first().json;\nconst crmResponse = $('Send to CRM').first().json;\n\nconsole.log('Lead processed successfully:', {\n  email_id: data.email_id,\n  from: data.from,\n  confidence: data.ai_analysis.confidence,\n  person_id: crmResponse.person_id,\n  timestamp: new Date().toISOString()\n});\n\nreturn [{ json: {\n  success: true,\n  message: 'Lead processed and added to staging',\n  email_id: data.email_id,\n  person_id: crmResponse.person_id,\n  confidence: data.ai_analysis.confidence\n} }];"
      },
      "id": "success-log",
      "name": "Success Log",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "jsCode": "// Log non-lead emails\nconst data = $input.first().json;\n\nconsole.log('Email processed (not a lead):', {\n  email_id: data.email_id,\n  from: data.from,\n  confidence: data.ai_analysis.confidence,\n  reason: data.ai_analysis.confidence < 0.7 ? 'Low confidence' : 'Not identified as lead',\n  timestamp: new Date().toISOString()\n});\n\nreturn [{ json: {\n  success: true,\n  message: 'Email processed (not a lead)',\n  email_id: data.email_id,\n  confidence: data.ai_analysis.confidence\n} }];"
      },
      "id": "non-lead-log",
      "name": "Non-Lead Log",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 400]
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "OpenAI Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Analysis": {
      "main": [
        [
          {
            "node": "Enhance Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhance Data": {
      "main": [
        [
          {
            "node": "Lead Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lead Filter": {
      "main": [
        [
          {
            "node": "Send to CRM",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Non-Lead Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to CRM": {
      "main": [
        [
          {
            "node": "Success Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-01-15T10:00:00.000Z",
  "versionId": "1"
} 